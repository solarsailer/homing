#!/usr/bin/env ruby
require 'optparse'
require 'colorize'
require 'setebos'
require 'setebos/logger'

# -------------------------------------------------------
# App.
# -------------------------------------------------------

# Option values.
options = {}

# Usage message.
usage = nil

# Parser.
parser = OptionParser.new do |opts|

  # -------------------------------------------------------
  # Header.
  # -------------------------------------------------------

  opts.banner = 'Usage: setebos [options] run /path/to/file'

  # -------------------------------------------------------
  # Options.
  # -------------------------------------------------------

  opts.separator ''
  opts.separator 'Options:'

  opts.on('-a', '--all', 'Run everything') do |a|
    options[:all] = true
  end

  # -------------------------------------------------------
  # Tails.
  # -------------------------------------------------------

  opts.separator ''

  opts.on_tail('-h', '--help', 'Show this message') do
    puts opts
    exit
  end

  opts.on_tail('-v', '--version', 'Show version') do
    puts 'setebos ' + Setebos::VERSION
    exit
  end

  # Store usage.
  usage = opts.to_s
end

# Parse the options and exit if an invalid option is present.
begin
  parser.parse!
rescue
  Logger.error 'Invalid option(s).'
end

# Get the command.
command = ARGV.shift

# Execute. Abort if invalid command.
case command
when 'run'
  # Retrieve the file path.
  path = ARGV[0]
  Logger.error 'No file provided.' if !path

  # Run the great Setebos.
  Setebos::Setebos.run(path)
when nil
  puts usage
else
  Logger.error 'Invalid command.'
end
