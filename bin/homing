#!/usr/bin/env ruby
require 'optparse'
require 'colorize'
require 'homing'

# Option values.
options = {}

# Usage message.
usage = nil

# Parser.
parser = OptionParser.new do |opts|

  # -------------------------------------------------------
  # Header.
  # -------------------------------------------------------

  opts.banner = "Usage: homing [options] run"

  # -------------------------------------------------------
  # Options.
  # -------------------------------------------------------

  opts.separator ''
  opts.separator 'Options:'

  opts.on('-a', '--all', "Run everything") do |a|
    options[:all] = true
  end

  # -------------------------------------------------------
  # Tails.
  # -------------------------------------------------------

  opts.separator ''

  opts.on_tail('-h', '--help', "Show this message") do
    puts opts
    exit
  end

  opts.on_tail('-v', '--version', "Show version") do
    puts 'homing ' + Homing::VERSION
    exit
  end

  # Store usage.
  usage = opts.to_s
end

# Parse the options and exit if an invalid option is present.
begin
  parser.parse!
rescue
  puts 'Invalid option(s).'.colorize(:red).bold
  exit
end

# Get the command.
command = ARGV.shift

# Execute. Abort if invalid command.
case command
when 'run'
  puts options
when nil
  puts usage
else
  puts 'Invalid command.'.colorize(:red).bold
  exit
end
